@layout('land/components/layouts/desginer')

@section('title')
<meta name="keywords" content="" />
<meta name="description" content="" />
<title>{{ data.title }} - LandTower</title>
@endsection

@section('style')
<link href="/lib/wangeditor/index.css" rel="stylesheet">
<style media="screen">
  #editor—wrapper { border: 1px solid #ccc; z-index: 100; }
  #toolbar-container { border-bottom: 1px solid #ccc; }
  #editor-container { height: 500px; }

  .ui.images .ui.image { height: 80px; background-size: cover; background-position: center; background-repeat: no-repeat; }
  .ui.images .ui.image { position: relative; }
</style>
@endsection

@section('content')
  <div class="ui stackable four column grid">
    <div class="sixteen wide column">
      <div class="flex-between">
        <b>{{ data.title }}</b>
      </div>
      <form class="ui segment form" method="post" action="{{ route('land/admin/DesginerManageController.updateUserinfo') }}" enctype="multipart/form-data">
        <div class="field" hidden>
          <label>ID</label>
          <input type="text" name="id" value="{{ data.desginer.id || '' }}" placeholder="" />
        </div>
        <!-- <div class="field" hidden>
          <label>头像 URL</label>
          <input type="text" name="avatar_url" value="{{ data.desginer.avatar_url || '' }}" placeholder="" />
        </div> -->
        <div class="field">
          <label>头像 URL（图片上传大小 2M 内）</label>
          <div class="ui tiny rounded bordered images">
            <img class="ui small rounded bordered image" onclick="upload_file_0.click()" id="upload_file_tmp_0" src="{{ data.desginer.avatar_url ? data.desginer.avatar_url : 'https://semantic-ui.com/images/wireframe/white-image.png' }}">
            <input type="file" name="avatar" value="{{ data.desginer.avatar_url || '' }}" id="upload_file_0" onchange="change('#upload_file_0', '#upload_file_tmp_0');" hidden />
          </div>
        </div>
        <div class="field">
          <label>姓名</label>
          <input type="text" name="nickname" value="{{ data.desginer.nickname }}" placeholder="" />
        </div>
        <div class="field" style="display: none;">
          <label>性别</label>
          <div class="ui selection dropdown">
            <input type="hidden" name="sex" value="{{ data.desginer.sex }}" />
            <i class="dropdown icon"></i>
            <div class="default text">点击选择</div>
            <div class="menu">
              <div class="item" data-value="0">女</div>
              <div class="item" data-value="1">男</div>
            </div>
          </div>
        </div>
        <div class="field">
          <label>个人标签</label>
          <input type="text" name="labels" value="{{ data.desginer.labels || '' }}" placeholder="标签之间以英文逗号 , 分割" />
        </div>
        <div class="field">
          <label>个人经历</label>
          <div class="ui segment" style="padding: 0;">
            <div id="editor—wrapper">
              <div id="toolbar-container"><!-- 工具栏 --></div>
              <div id="editor-container"><!-- 编辑器 --></div>
            </div>
            <input id="detail" type="text" name="detail" value="{{ data.desginer.detail || '' }}" hidden />
          </div>
        </div>
        {{ csrfField() }}
        <button class="ui tiny button" type="submit" name="button" value="update">提交</button>
      </form>
    </div>
  </div>
@endsection

@section('script')
<script src="/lib/wangeditor/index.js"></script>
<script type="text/javascript">
  const { createEditor, createToolbar } = window.wangEditor
  const editor = createEditor({
    selector: '#editor-container',
    html: $('#detail').val() || '',
    config: {
      placeholder: '请输入内容...',
      MENU_CONF: {
        uploadImage: {
          server: '/land/file/upload',
          fieldName: 'files',
          maxFileSize: 10 * 1024 * 1024
        },
        uploadVideo: {
          server: '/land/file/upload',
          fieldName: 'files',
          maxFileSize: 100 * 1024 * 1024
        },
      },
      onChange(editor) {
        $('#detail').val(editor.getHtml())
      }
    },
    mode: 'simple', // or 'simple'
  })

  const toolbarConfig = {}

  const toolbar = createToolbar({
    editor,
    selector: '#toolbar-container',
    config: toolbarConfig,
    mode: 'simple', // or 'simple'
  })

  var reads = new FileReader()
  function change(input, src) {
    reads.readAsDataURL($(input)[0].files[0])
    reads.onload = function(e) {
      $(src).attr("src", this.result)
    }
  }
</script>
@endsection
